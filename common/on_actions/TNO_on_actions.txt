on_actions = {
	######################################################
	### on_startup goes to TNO_on_startup_actions.txt ###
	######################################################

	on_declare_war = { #I am genuinely terrified of this code, and resent the fact that mechanically I need to do this shit at all. I hope it actually works. - Pacifica, Came here to fix what wasn't working - Wendell
		effect = {
			if = {
				limit = {
					ROOT = { has_border_war = yes }
				}
				ROOT = {
					TNO_cancel_border_war_country_scope = yes
				}
			}
			if = {
				limit = {
					FROM = { has_border_war = yes }
				}
				FROM = {
					TNO_cancel_border_war_country_scope = yes
				}
			}
		}
	}

	on_war_relation_added = {
		effect = {
			log = "on_war_relation_added trade"
			ROOT = { 
				reload_trade_influence_on_war = yes 
				every_enemy_country = {
					every_enemy_country = {
						limit = { is_ai = yes }
						update_ai_slider_logic = yes
					}
				}
				every_enemy_country = {
					limit = { is_ai = yes }
					update_ai_slider_logic = yes
				}
			}
		}
	}

	on_peace = {
		effect = {
			# Trade
			recalculate_trade_influence = yes

			#War Taxes auto disable stuff
			if = {
				limit = {
					has_country_flag = war_taxes_enabled
					has_war = no
				}
				clr_country_flag = war_taxes_enabled
				set_variable = { wt_status_frame = 1 }
				add_to_variable = { TNO_economy_GUI_dirty = 1 }
			}
		}
	}

	on_state_control_changed = {
		effect = {
			if = { # hurts state value based on occupier
				limit = {
					NOT = {
						has_global_flag = NUCLEAR_WAR
					}
					ROOT = {
						has_war_with = FROM
					}
				}
				FROM.FROM = {
					log = "[?state_value] was state value before applying effects of changing on war"
					set_temp_variable = { state_value_kept = ROOT:modifier@state_GDP_kept_on_occupation_modifier }
					clamp_temp_variable = {
						var = state_value_kept
						max = 1 
					}
					multiply_variable = { state_value = state_value_kept }
					log = "[?state_value] was state value after applying effects of changing on war"
				}
			}

			# else_if = { # this bit hurts state_value a bit due to exchange that's not explicitly peaceful DISABLED FOR NOW

			# 	limit = {
			# 		NOT = {
			# 			has_global_flag = NUCLEAR_WAR
			# 		}
			# 		NOT = {
			# 			OR = {
			# 				ROOT = {
			# 					has_variable = peaceful_land_transfer
			# 				}
			# 				FROM = {
			# 					has_variable = peaceful_land_transfer
			# 				}
			# 			}
			# 		}
			# 	}
			# 	log = "[?state_value] was state value before applying effects of changing on non-peaceful transfer"
			# 	FROM.FROM = {
			# 		multiply_variable = { state_value = 0.95 }
			# 	}
			# 	log = "[?state_value] was state value after applying effects of changing on non-peaceful transfer"
			# }
			ROOT = {
				recalculate_GDP_and_PUs_on_demand = yes
			}
			FROM = {
				recalculate_GDP_and_PUs_on_demand = yes
			}
		}	
	}

	# Anarchy tag daily pulse
	on_daily_ZZZ = {
		effect = {
			if = {
				limit = {
					has_variable = global.TNO_conference
					NOT = { has_global_flag = CW_Proposals_Done }
				}
				add_to_variable = { global.CW_Conference_Timer = 4 }
				clamp_variable = { var = global.CW_Conference_Timer min = 0 max = 100 }
				if = {
					limit = {
						check_variable = { global.CW_Conference_Timer > 99.9 }
						NOT = { has_global_flag = CW_Proposals_Done }
					}
					set_global_flag = CW_Proposals_Done
					set_variable = { global.CW_Conference_Timer = 0 }
				}
				else_if = {
					limit = {
						check_variable = { global.CW_Conference_Timer > 99.9 }
						has_global_flag = CW_Proposals_Done
					}
					set_global_flag = CW_Conference_Done
					TNO_CW_conference_timeout_effects = yes
				}
			}
		}
	}

	# Anarchy tag weekly pulse
	on_weekly_ZZZ = {
		effect = {
			first_every_week_script = yes

			
			#for_each_scope_loop = { 
			#	array = global.volunteer_nations
#
			#	if = {
			#		limit = { is_ai = yes }
			#		for_each_scope_loop = {
			#			array = TNO_volunteers_tags
			#			break = voluntoids
#
			#			set_temp_variable = { target = THIS }
			#			PREV = { TNO_get_num_volunteers = YES }
			#			add_to_temp_variable = { result = 1 }
			#			if = {
			#				limit = {
			#					meta_trigger = {
			#						text = {
			#							OR = { 
			#								has_volunteers_amount_from = {
			#									tag = PREV
			#									count < [RESULT]
			#								}
			#								has_volunteers_amount_from = {
			#									tag = PREV
			#									count > [RESULT]
			#								}
			#							}
			#						}
			#						RESULT = result
			#					}
			#				}
			#				PREV = { recall_volunteers_from = PREV }
			#				set_variable = { PREV.TNO_test_additional_volunteers = result }
			#				subtract_from_variable = { PREV.TNO_test_additional_volunteers = 1 }
			#				add_to_temp_variable = { voluntoids = 1 }
			#			}
			#		}
			#	}
			#}
		}
	}

	# Anarchy tag monthly pulse
	on_monthly_ZZZ = {
		effect = {
			first_every_month_script = yes
			add_to_variable = { pulse_month = 1 }
			if = {
				limit = { check_variable = { pulse_month = 12 } }
				set_variable = { pulse_month = 0 }
				BRA_run_year_on_action = yes
			}
			Cold_War_GUI_Fully_Calculate_Scores = yes # Recalc scores
		}
	}

	# Monthly pulse for everyone - NO LAMOUNIER BAD
}