# Scripted effects for the custom alert system
# These are the top-bar alerts that show up below the decision, research, diplomacy, trade etc. buttons

TNO_initialize_alerts = {
	clear_array = TNO_alerts
	clear_array = TNO_alert_data

	add_to_array = { TNO_alerts = 0 }
	resize_array = { array = TNO_alerts size = 1 value = 0 }
	resize_array = { array = TNO_alert_data size = 1 value = 0 }

	clear_array = TNO_alert_types_suppression
}


# Adds an alert with id `alert_id` and data `alert_data` to the list of alerts, if an alert with the same id does not exist
add_TNO_alert_unless_exists = {
	if = {
		limit = {
			NOT = { is_in_array = { TNO_alerts = alert_id } }
		}

		add_TNO_alert = yes
	}
}

# Adds an alert with id `alert_id` and data `alert_data` to the list of alerts unconditionally
add_TNO_alert = {
	if = {
		limit = {
			NOT = { is_in_array = { TNO_alert_types_suppression = alert_id } }
		}

		add_to_array = { array = TNO_alerts value = alert_id index = 0 }
		add_to_array = { array = TNO_alert_data value = alert_data index = 0 }

		# sound_effect = "crabrave"
	}
}

# Removes all alerts with id `alert_id`
remove_TNO_alert = {
	set_temp_variable = { idx = 0 }

	while_loop_effect = {
		limit = { check_variable = { idx < TNO_alerts^num } }

		if = { 
			limit = { check_variable = { TNO_alerts^idx = alert_id } }

			remove_from_array = { array = TNO_alerts index = idx }
			remove_from_array = { array = TNO_alert_data index = idx }

			subtract_from_temp_variable = { idx = 1 }
		}
		add_to_temp_variable = { idx = 1 }
	}
}

# Removes all alerts with id `alert_id` and data `alert_data`
remove_TNO_alert_data = {
	set_temp_variable = { idx = 0 }

	while_loop_effect = {
		limit = { check_variable = { idx < TNO_alerts^num } }

		if = { 
			limit = {
				check_variable = { TNO_alerts^idx = alert_id }
				check_variable = { TNO_alert_data^idx = alert_data }
			}

			remove_from_array = { array = TNO_alerts index = idx }
			remove_from_array = { array = TNO_alert_data index = idx }

			subtract_from_temp_variable = { idx = 1 }
		}
		add_to_temp_variable = { idx = 1 }
	}	
}

# Alert click effect
TNO_alert_click = {
	
	if = {
		# Fiscal Crisis Alert
		limit = { check_variable = { alert_id = 1 } }
		set_country_flag = Econ_Graphs_Actions_Tab_Open
	}
	else_if = {
		# Tension Alert
		limit = { check_variable = { alert_id = 2 } }
	}
	else_if = {
		# Brazil Senado voting alert
		limit = { check_variable = { alert_id = 7 } }

		set_country_flag = BRA_map_window_open

		clear_array = BRA_map_selected_tab
		add_to_array = { BRA_map_selected_tab = 1 }
		set_variable = { BRA_map_election_type_frames^0 = 1 }
		set_variable = { BRA_map_election_type_frames^1 = 2 }

		clear_array = BRA_map_tab_frames
		add_to_array = { BRA_map_tab_frames = 1 }
		add_to_array = { BRA_map_tab_frames = 2 }
		add_to_array = { BRA_map_tab_frames = 1 }

		BRA_senate_select_state = yes
	}
	else_if = {
		# Brazil Presidential voting alert
		limit = { check_variable = { alert_id = 8 } }

		set_country_flag = BRA_map_window_open

		clear_array = BRA_map_selected_tab
		add_to_array = { BRA_map_selected_tab = 3 }
		set_variable = { BRA_map_election_type_frames^0 = 2 }
		set_variable = { BRA_map_election_type_frames^1 = 1 }

		clear_array = BRA_map_tab_frames
		add_to_array = { BRA_map_tab_frames = 1 }
		add_to_array = { BRA_map_tab_frames = 2 }
		add_to_array = { BRA_map_tab_frames = 1 }

		BRA_senate_select_state = yes
	}
	else_if = {
		# Brazil Development edict alert
		limit = { check_variable = { alert_id = 10 } }

		set_country_flag = BRA_map_window_open

		clear_array = BRA_map_selected_tab
		add_to_array = { BRA_map_selected_tab = 0 }

		clear_array = BRA_map_tab_frames
		add_to_array = { BRA_map_tab_frames = 2 }
		add_to_array = { BRA_map_tab_frames = 1 }
		add_to_array = { BRA_map_tab_frames = 1 }
	}
	else_if = { # used for credit rating effects
		limit = {
			OR = {
				check_variable = { alert_id = 11 }
				check_variable = { alert_id = 12 }
			}
		}

		set_country_flag = Credit_Ladder_Tab_Open
		set_country_flag = econ_view_visible
	}
	else_if = {
		# Bormann Kartenhaus alert
		limit = { check_variable = { alert_id = 100 } }
		set_country_flag = GER_Bormann_SIG_GUI_Open
		BOR_Kartenhaus_Open = yes

		remove_TNO_alert = yes
	}
}

# Alert cancel effect
TNO_alert_right_click = {
	remove_from_array = { array = TNO_alerts index = alert_idx }
	remove_from_array = { array = TNO_alert_data index = alert_idx }

	suppress_TNO_alert = yes
}

# Suppresses the given `alert_id`, stopping it from appearing again for a fixed duration
# the duration is 2 weeks
suppress_TNO_alert = {
	if = {
		limit = {
			NOT = { is_in_array = { TNO_alert_types_suppression = alert_id } }
		}

		set_temp_variable = { suppression_weeks = 2 }

		# if statements to change time here
		if = {
			limit = { check_variable = { alert_id = 999 } }
			set_temp_variable = { suppression_weeks = 0 }
		}
		if = {
			limit = { check_variable = { alert_id = 103 } }
			set_temp_variable = { suppression_weeks = 0 }
		}

		if = {
			limit = { check_variable = { suppression_weeks > 0 } }
			
			add_to_array = { TNO_alert_types_suppression = alert_id }
			add_to_array = { TNO_alert_types_suppression_time = suppression_weeks }
		}
	}
}

TNO_alert_suppression_weekly_tick = {
	set_temp_variable = { idx = 0 }

	while_loop_effect = {
		limit = { check_variable = { idx < TNO_alert_types_suppression^num } }

		subtract_from_variable = { TNO_alert_types_suppression_time^idx = 1 }
		if = { 
			limit = { check_variable = { TNO_alert_types_suppression_time^idx = 0 } }

			set_temp_variable = { alert_id = TNO_alert_types_suppression^idx }
			TNO_alert_suppression_expired = yes

			remove_from_array = { array = TNO_alert_types_suppression index = idx }
			remove_from_array = { array = TNO_alert_types_suppression_time index = idx }

			subtract_from_temp_variable = { idx = 1 }
		}
		add_to_temp_variable = { idx = 1 }
	}
}

TNO_alert_suppression_expired = {
}